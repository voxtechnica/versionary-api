{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Versionary API demonstrates a way to manage versioned entities in a database with a serverless architecture.",
        "title": "Versionary API",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://github.com/voxtechnica/versionary-api/blob/main/LICENSE"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/about": {
            "get": {
                "description": "Basic information about the API, including the operating environment and the current git commit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Basic information about the API",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.About"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/commit": {
            "get": {
                "description": "Redirects to the current git commit on GitHub.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Redirect to the current git commit on GitHub",
                "responses": {
                    "307": {
                        "description": "Temporary Redirect",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/echo": {
            "get": {
                "description": "Echo the request back to the client, including a recognized Token and associated User.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Echo the request back to the client",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.request"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/user_agent": {
            "get": {
                "description": "Echo a parsed User-Agent header.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Echo a parsed User-Agent header",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_agent.UserAgent"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.About": {
            "type": "object",
            "properties": {
                "buildTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "environment": {
                    "type": "string"
                },
                "gitHash": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": {
                "type": "any"
            }
        },
        "http.Header": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "main.request": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "contentLength": {
                    "type": "integer"
                },
                "header": {
                    "$ref": "#/definitions/http.Header"
                },
                "host": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "proto": {
                    "type": "string"
                },
                "remoteAddr": {
                    "type": "string"
                },
                "requestURI": {
                    "type": "string"
                },
                "token": {
                    "$ref": "#/definitions/user.Token"
                },
                "trailer": {
                    "$ref": "#/definitions/http.Header"
                },
                "transferEncoding": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/user.User"
                }
            }
        },
        "user.Token": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "orgID": {
                    "type": "string"
                },
                "orgName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordHash": {
                    "type": "string"
                },
                "passwordReset": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "versionID": {
                    "type": "string"
                }
            }
        },
        "user_agent.UserAgent": {
            "type": "object",
            "properties": {
                "clientName": {
                    "description": "ClientName indicates the application name (Chrome, Googlebot, Edge, etc.)",
                    "type": "string"
                },
                "clientType": {
                    "description": "ClientType indicates the application category (App, Bot, Browser, or Other)",
                    "type": "string"
                },
                "clientVersion": {
                    "description": "ClientVersion indicates the extractVersion of the application, if provided",
                    "type": "string"
                },
                "deviceType": {
                    "description": "DeviceType indicates the general device category (Desktop, Mobile, Tablet, Other)",
                    "type": "string"
                },
                "fields": {
                    "description": "Fields contains parsed/cleaned segments of the User-Agent request header, used for analysis",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "header": {
                    "description": "Header is the provided User-Agent request header",
                    "type": "string"
                },
                "osName": {
                    "description": "OSName indicates the operating system running on the device (Android, Linux, iOS, macOS, Windows, etc.)",
                    "type": "string"
                },
                "osVersion": {
                    "description": "OSVersion indicates the operating system version, if available",
                    "type": "string"
                },
                "url": {
                    "description": "URL indicates the URL provided, typically for information about a bot/crawler.",
                    "type": "string"
                }
            }
        }
    }
}